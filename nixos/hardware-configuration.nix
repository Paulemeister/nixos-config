# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];
  boot.supportedFilesystems = ["ntfs"];

  fileSystems."/persist" = {
    device = "/dev/disk/by-uuid/e062ead8-30c0-4914-8fcb-20b1a11f23a0";
    fsType = "ext4";
    neededForBoot = true;
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/F147-99A5";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  fileSystems."/" = {
    device = "none";
    fsType = "tmpfs";
    options = ["defaults" "size=2G" "mode=755"];
  };

  # HDD
  fileSystems."/mnt/d04bb654-941c-4de8-ac86-68126b16227d" = {
    device = "/dev/disk/by-uuid/d04bb654-941c-4de8-ac86-68126b16227d";
    fsType = "ext4";
    options = ["rw" "users" "exec" "suid" "dev" "nofail" "x-gvfs-show" "noauto" "x-gvfs-name=HDD%20Data"];
  };

  fileSystems."/mnt/55c337dc-1bd5-4447-9861-12e187809f25" = {
    device = "/dev/disk/by-uuid/55c337dc-1bd5-4447-9861-12e187809f25";
    fsType = "ext4";
    options = ["rw" "users" "exec" "suid" "dev" "nofail" "x-gvfs-show" "noauto" "x-gvfs-name=HDD%20Games"];
  };

  fileSystems."/mnt/0BCEE39470700B7C" = {
    device = "/dev/disk/by-uuid/0BCEE39470700B7C";
    fsType = "ntfs-3g";
    options = ["rw" "users" "exec" "suid" "dev" "nofail" "x-gvfs-show" "noauto" "x-gvfs-name=HDD%20NTFS%20Data"];
  };
  # Daten SSD
  fileSystems."/mnt/a88cc0c3-a13c-43b7-9b9e-5b8654fc9ee0" = {
    device = "/dev/disk/by-uuid/a88cc0c3-a13c-43b7-9b9e-5b8654fc9ee0";
    fsType = "ext4";
    options = ["rw" "users" "exec" "suid" "dev" "nofail" "x-gvfs-show" "x-gvfs-name=Pauls%20Data"];
  };
  # Pop!_OS
  fileSystems."/mnt/e03b51a8-a2c0-4c10-adae-f27c3b443bc2" = {
    device = "/dev/disk/by-uuid/e03b51a8-a2c0-4c10-adae-f27c3b443bc2";
    fsType = "ext4";
    options = ["rw" "users" "exec" "suid" "dev" "nofail" "x-gvfs-show" "noauto" "x-gvfs-name=Pop%21_OS"];
  };
  # Windows
  fileSystems."/mnt/C6A801B2A801A253" = {
    device = "/dev/disk/by-uuid/C6A801B2A801A253";
    fsType = "ntfs-3g";
    options = ["rw" "users" "exec" "suid" "dev" "nofail" "x-gvfs-show" "noauto" "x-gvfs-name=Windows"];
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/9d9c717f-7aff-41e7-941c-79a7979701d7";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
